<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetBase" targetNamespace="http://tempuri.org/DataSetBase.xsd" xmlns:mstns="http://tempuri.org/DataSetBase.xsd" xmlns="http://tempuri.org/DataSetBase.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="KnowledgeBaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="KnowledgeBaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ClassLibraryDBMethods.Properties.Settings.GlobalReference.Default.KnowledgeBaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DocumentsTableAdapter" GeneratorDataComponentClassName="DocumentsTableAdapter" Name="Documents" UserDataComponentName="DocumentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KnowledgeBaseConnectionString (Settings)" DbObjectName="KnowledgeBase.dbo.Documents" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Documents] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Documents] ([Name]) VALUES (@Name);
SELECT id, Name FROM Documents WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Name FROM dbo.Documents</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Documents] SET [Name] = @Name WHERE (([id] = @Original_id));
SELECT id, Name FROM Documents WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TermsTableAdapter" GeneratorDataComponentClassName="TermsTableAdapter" Name="Terms" UserDataComponentName="TermsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KnowledgeBaseConnectionString (Settings)" DbObjectName="KnowledgeBase.dbo.Terms" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Terms] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Terms] ([Name]) VALUES (@Name);
SELECT id, Name FROM Terms WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Name FROM dbo.Terms</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Terms] SET [Name] = @Name WHERE (([id] = @Original_id));
SELECT id, Name FROM Terms WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RubricsTableAdapter" GeneratorDataComponentClassName="RubricsTableAdapter" Name="Rubrics" UserDataComponentName="RubricsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KnowledgeBaseConnectionString (Settings)" DbObjectName="KnowledgeBase.dbo.Rubrics" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Rubrics] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Rubrics] ([Name], [Description], [SignSegmenatations]) VALUES (@Name, @Description, @SignSegmenatations);
SELECT id, Name, Description, SignSegmenatations FROM Rubrics WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SignSegmenatations" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SignSegmenatations" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Name, Description, SignSegmenatations FROM dbo.Rubrics</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Rubrics] SET [Name] = @Name, [Description] = @Description, [SignSegmenatations] = @SignSegmenatations WHERE (([id] = @Original_id));
SELECT id, Name, Description, SignSegmenatations FROM Rubrics WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SignSegmenatations" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SignSegmenatations" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="SignSegmenatations" DataSetColumn="SignSegmenatations" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RubricsDocumentsTableAdapter" GeneratorDataComponentClassName="RubricsDocumentsTableAdapter" Name="RubricsDocuments" UserDataComponentName="RubricsDocumentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KnowledgeBaseConnectionString (Settings)" DbObjectName="KnowledgeBase.dbo.RubricsDocuments" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RubricsDocuments] WHERE (([id] = @Original_id) AND ([Rubric_id] = @Original_Rubric_id) AND ([Document_id] = @Original_Document_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Document_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Document_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RubricsDocuments] ([Rubric_id], [Document_id]) VALUES (@Rubric_id, @Document_id);
SELECT id, Rubric_id, Document_id FROM RubricsDocuments WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Document_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Document_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Rubric_id, Document_id FROM dbo.RubricsDocuments</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RubricsDocuments] SET [Rubric_id] = @Rubric_id, [Document_id] = @Document_id WHERE (([id] = @Original_id) AND ([Rubric_id] = @Original_Rubric_id) AND ([Document_id] = @Original_Document_id));
SELECT id, Rubric_id, Document_id FROM RubricsDocuments WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Document_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Document_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Document_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Document_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Rubric_id" DataSetColumn="Rubric_id" />
              <Mapping SourceColumn="Document_id" DataSetColumn="Document_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RubricsTreePathTableAdapter" GeneratorDataComponentClassName="RubricsTreePathTableAdapter" Name="RubricsTreePath" UserDataComponentName="RubricsTreePathTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KnowledgeBaseConnectionString (Settings)" DbObjectName="KnowledgeBase.dbo.RubricsTreePath" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RubricsTreePath] WHERE (([id] = @Original_id) AND ([Rubric_parent_id] = @Original_Rubric_parent_id) AND ([Rubric_child_id] = @Original_Rubric_child_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_parent_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_parent_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_child_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_child_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RubricsTreePath] ([Rubric_parent_id], [Rubric_child_id]) VALUES (@Rubric_parent_id, @Rubric_child_id);
SELECT id, Rubric_parent_id, Rubric_child_id FROM RubricsTreePath WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_parent_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_parent_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_child_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_child_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Rubric_parent_id, Rubric_child_id FROM dbo.RubricsTreePath</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RubricsTreePath] SET [Rubric_parent_id] = @Rubric_parent_id, [Rubric_child_id] = @Rubric_child_id WHERE (([id] = @Original_id) AND ([Rubric_parent_id] = @Original_Rubric_parent_id) AND ([Rubric_child_id] = @Original_Rubric_child_id));
SELECT id, Rubric_parent_id, Rubric_child_id FROM RubricsTreePath WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_parent_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_parent_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_child_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_child_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_parent_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_parent_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_child_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_child_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Rubric_parent_id" DataSetColumn="Rubric_parent_id" />
              <Mapping SourceColumn="Rubric_child_id" DataSetColumn="Rubric_child_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TemporaryTableWordsTableAdapter" GeneratorDataComponentClassName="TemporaryTableWordsTableAdapter" Name="TemporaryTableWords" UserDataComponentName="TemporaryTableWordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KnowledgeBaseConnectionString (Settings)" DbObjectName="KnowledgeBase.dbo.TemporaryTableWords" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TemporaryTableWords] WHERE (([ID] = @Original_ID) AND ([Word] = @Original_Word))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TemporaryTableWords] ([Word], [Description]) VALUES (@Word, @Description);
SELECT ID, Word, Description FROM TemporaryTableWords WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Word, Description FROM dbo.TemporaryTableWords</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TemporaryTableWords] SET [Word] = @Word, [Description] = @Description WHERE (([ID] = @Original_ID) AND ([Word] = @Original_Word));
SELECT ID, Word, Description FROM TemporaryTableWords WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RubricsTermsTableAdapter" GeneratorDataComponentClassName="RubricsTermsTableAdapter" Name="RubricsTerms" UserDataComponentName="RubricsTermsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="KnowledgeBaseConnectionString (Settings)" DbObjectName="KnowledgeBase.dbo.RubricsTerms" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [RubricsTerms] WHERE (([id] = @Original_id) AND ([Rubric_id] = @Original_Rubric_id) AND ([Term_id] = @Original_Term_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Term_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Term_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [RubricsTerms] ([Rubric_id], [Term_id]) VALUES (@Rubric_id, @Term_id);
SELECT id, Rubric_id, Term_id FROM RubricsTerms WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Term_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Term_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        id, Rubric_id, Term_id
FROM            RubricsTerms</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [RubricsTerms] SET [Rubric_id] = @Rubric_id, [Term_id] = @Term_id WHERE (([id] = @Original_id) AND ([Rubric_id] = @Original_Rubric_id) AND ([Term_id] = @Original_Term_id));
SELECT id, Rubric_id, Term_id FROM RubricsTerms WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Term_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Term_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rubric_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rubric_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Term_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Term_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="KnowledgeBase.dbo.RubricsTerms" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Rubric_id" DataSetColumn="Rubric_id" />
              <Mapping SourceColumn="Term_id" DataSetColumn="Term_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetBase" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSetBase" msprop:Generator_UserDSName="DataSetBase">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Documents" msprop:Generator_TableClassName="DocumentsDataTable" msprop:Generator_TableVarName="tableDocuments" msprop:Generator_RowChangedName="DocumentsRowChanged" msprop:Generator_TablePropName="Documents" msprop:Generator_RowDeletingName="DocumentsRowDeleting" msprop:Generator_RowChangingName="DocumentsRowChanging" msprop:Generator_RowEvHandlerName="DocumentsRowChangeEventHandler" msprop:Generator_RowDeletedName="DocumentsRowDeleted" msprop:Generator_RowClassName="DocumentsRow" msprop:Generator_UserTableName="Documents" msprop:Generator_RowEvArgName="DocumentsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Terms" msprop:Generator_TableClassName="TermsDataTable" msprop:Generator_TableVarName="tableTerms" msprop:Generator_RowChangedName="TermsRowChanged" msprop:Generator_TablePropName="Terms" msprop:Generator_RowDeletingName="TermsRowDeleting" msprop:Generator_RowChangingName="TermsRowChanging" msprop:Generator_RowEvHandlerName="TermsRowChangeEventHandler" msprop:Generator_RowDeletedName="TermsRowDeleted" msprop:Generator_RowClassName="TermsRow" msprop:Generator_UserTableName="Terms" msprop:Generator_RowEvArgName="TermsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Rubrics" msprop:Generator_TableClassName="RubricsDataTable" msprop:Generator_TableVarName="tableRubrics" msprop:Generator_RowChangedName="RubricsRowChanged" msprop:Generator_TablePropName="Rubrics" msprop:Generator_RowDeletingName="RubricsRowDeleting" msprop:Generator_RowChangingName="RubricsRowChanging" msprop:Generator_RowEvHandlerName="RubricsRowChangeEventHandler" msprop:Generator_RowDeletedName="RubricsRowDeleted" msprop:Generator_RowClassName="RubricsRow" msprop:Generator_UserTableName="Rubrics" msprop:Generator_RowEvArgName="RubricsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SignSegmenatations" msprop:Generator_ColumnVarNameInTable="columnSignSegmenatations" msprop:Generator_ColumnPropNameInRow="SignSegmenatations" msprop:Generator_ColumnPropNameInTable="SignSegmenatationsColumn" msprop:Generator_UserColumnName="SignSegmenatations">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RubricsDocuments" msprop:Generator_TableClassName="RubricsDocumentsDataTable" msprop:Generator_TableVarName="tableRubricsDocuments" msprop:Generator_RowChangedName="RubricsDocumentsRowChanged" msprop:Generator_TablePropName="RubricsDocuments" msprop:Generator_RowDeletingName="RubricsDocumentsRowDeleting" msprop:Generator_RowChangingName="RubricsDocumentsRowChanging" msprop:Generator_RowEvHandlerName="RubricsDocumentsRowChangeEventHandler" msprop:Generator_RowDeletedName="RubricsDocumentsRowDeleted" msprop:Generator_RowClassName="RubricsDocumentsRow" msprop:Generator_UserTableName="RubricsDocuments" msprop:Generator_RowEvArgName="RubricsDocumentsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Rubric_id" msprop:Generator_ColumnVarNameInTable="columnRubric_id" msprop:Generator_ColumnPropNameInRow="Rubric_id" msprop:Generator_ColumnPropNameInTable="Rubric_idColumn" msprop:Generator_UserColumnName="Rubric_id" type="xs:int" />
              <xs:element name="Document_id" msprop:Generator_ColumnVarNameInTable="columnDocument_id" msprop:Generator_ColumnPropNameInRow="Document_id" msprop:Generator_ColumnPropNameInTable="Document_idColumn" msprop:Generator_UserColumnName="Document_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RubricsTreePath" msprop:Generator_TableClassName="RubricsTreePathDataTable" msprop:Generator_TableVarName="tableRubricsTreePath" msprop:Generator_RowChangedName="RubricsTreePathRowChanged" msprop:Generator_TablePropName="RubricsTreePath" msprop:Generator_RowDeletingName="RubricsTreePathRowDeleting" msprop:Generator_RowChangingName="RubricsTreePathRowChanging" msprop:Generator_RowEvHandlerName="RubricsTreePathRowChangeEventHandler" msprop:Generator_RowDeletedName="RubricsTreePathRowDeleted" msprop:Generator_RowClassName="RubricsTreePathRow" msprop:Generator_UserTableName="RubricsTreePath" msprop:Generator_RowEvArgName="RubricsTreePathRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Rubric_parent_id" msprop:Generator_ColumnVarNameInTable="columnRubric_parent_id" msprop:Generator_ColumnPropNameInRow="Rubric_parent_id" msprop:Generator_ColumnPropNameInTable="Rubric_parent_idColumn" msprop:Generator_UserColumnName="Rubric_parent_id" type="xs:int" />
              <xs:element name="Rubric_child_id" msprop:Generator_ColumnVarNameInTable="columnRubric_child_id" msprop:Generator_ColumnPropNameInRow="Rubric_child_id" msprop:Generator_ColumnPropNameInTable="Rubric_child_idColumn" msprop:Generator_UserColumnName="Rubric_child_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TemporaryTableWords" msprop:Generator_TableClassName="TemporaryTableWordsDataTable" msprop:Generator_TableVarName="tableTemporaryTableWords" msprop:Generator_RowChangedName="TemporaryTableWordsRowChanged" msprop:Generator_TablePropName="TemporaryTableWords" msprop:Generator_RowDeletingName="TemporaryTableWordsRowDeleting" msprop:Generator_RowChangingName="TemporaryTableWordsRowChanging" msprop:Generator_RowEvHandlerName="TemporaryTableWordsRowChangeEventHandler" msprop:Generator_RowDeletedName="TemporaryTableWordsRowDeleted" msprop:Generator_RowClassName="TemporaryTableWordsRow" msprop:Generator_UserTableName="TemporaryTableWords" msprop:Generator_RowEvArgName="TemporaryTableWordsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Word" msprop:Generator_ColumnVarNameInTable="columnWord" msprop:Generator_ColumnPropNameInRow="Word" msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RubricsTerms" msprop:Generator_TableClassName="RubricsTermsDataTable" msprop:Generator_TableVarName="tableRubricsTerms" msprop:Generator_TablePropName="RubricsTerms" msprop:Generator_RowDeletingName="RubricsTermsRowDeleting" msprop:Generator_RowChangingName="RubricsTermsRowChanging" msprop:Generator_RowEvHandlerName="RubricsTermsRowChangeEventHandler" msprop:Generator_RowDeletedName="RubricsTermsRowDeleted" msprop:Generator_UserTableName="RubricsTerms" msprop:Generator_RowChangedName="RubricsTermsRowChanged" msprop:Generator_RowEvArgName="RubricsTermsRowChangeEvent" msprop:Generator_RowClassName="RubricsTermsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Rubric_id" msprop:Generator_ColumnVarNameInTable="columnRubric_id" msprop:Generator_ColumnPropNameInRow="Rubric_id" msprop:Generator_ColumnPropNameInTable="Rubric_idColumn" msprop:Generator_UserColumnName="Rubric_id" type="xs:int" />
              <xs:element name="Term_id" msprop:Generator_ColumnVarNameInTable="columnTerm_id" msprop:Generator_ColumnPropNameInRow="Term_id" msprop:Generator_ColumnPropNameInTable="Term_idColumn" msprop:Generator_UserColumnName="Term_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Documents" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Terms_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Terms" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Rubrics_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Rubrics" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="RubricsDocuments_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RubricsDocuments" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="RubricsTreePath_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RubricsTreePath" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="TemporaryTableWords_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TemporaryTableWords" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="RubricsTerms_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RubricsTerms" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_RubricsTreePath_Rubrics_Child" msdata:parent="Rubrics" msdata:child="RubricsTreePath" msdata:parentkey="id" msdata:childkey="Rubric_child_id" msprop:Generator_UserChildTable="RubricsTreePath" msprop:Generator_ChildPropName="GetRubricsTreePathRowsByFK_RubricsTreePath_Rubrics_Child" msprop:Generator_UserRelationName="FK_RubricsTreePath_Rubrics_Child" msprop:Generator_RelationVarName="relationFK_RubricsTreePath_Rubrics_Child" msprop:Generator_UserParentTable="Rubrics" msprop:Generator_ParentPropName="RubricsRowByFK_RubricsTreePath_Rubrics_Child" />
      <msdata:Relationship name="FK_RubricsTreePath_Rubrics_Parent" msdata:parent="Rubrics" msdata:child="RubricsTreePath" msdata:parentkey="id" msdata:childkey="Rubric_parent_id" msprop:Generator_UserChildTable="RubricsTreePath" msprop:Generator_ChildPropName="GetRubricsTreePathRowsByFK_RubricsTreePath_Rubrics_Parent" msprop:Generator_UserRelationName="FK_RubricsTreePath_Rubrics_Parent" msprop:Generator_RelationVarName="relationFK_RubricsTreePath_Rubrics_Parent" msprop:Generator_UserParentTable="Rubrics" msprop:Generator_ParentPropName="RubricsRowByFK_RubricsTreePath_Rubrics_Parent" />
      <msdata:Relationship name="FK_RubricsTerms_Rubrics" msdata:parent="Rubrics" msdata:child="RubricsTerms" msdata:parentkey="id" msdata:childkey="Rubric_id" msprop:Generator_UserChildTable="RubricsTerms" msprop:Generator_ChildPropName="GetRubricsTermsRows" msprop:Generator_UserRelationName="FK_RubricsTerms_Rubrics" msprop:Generator_ParentPropName="RubricsRow" msprop:Generator_RelationVarName="relationFK_RubricsTerms_Rubrics" msprop:Generator_UserParentTable="Rubrics" />
      <msdata:Relationship name="FK_RubricsTerms_Terms" msdata:parent="Terms" msdata:child="RubricsTerms" msdata:parentkey="id" msdata:childkey="Term_id" msprop:Generator_UserChildTable="RubricsTerms" msprop:Generator_ChildPropName="GetRubricsTermsRows" msprop:Generator_UserRelationName="FK_RubricsTerms_Terms" msprop:Generator_ParentPropName="TermsRow" msprop:Generator_RelationVarName="relationFK_RubricsTerms_Terms" msprop:Generator_UserParentTable="Terms" />
      <msdata:Relationship name="FK_RubricsDocuments_Documents" msdata:parent="Documents" msdata:child="RubricsDocuments" msdata:parentkey="id" msdata:childkey="Document_id" msprop:Generator_UserChildTable="RubricsDocuments" msprop:Generator_ChildPropName="GetRubricsDocumentsRows" msprop:Generator_UserRelationName="FK_RubricsDocuments_Documents" msprop:Generator_ParentPropName="DocumentsRow" msprop:Generator_RelationVarName="relationFK_RubricsDocuments_Documents" msprop:Generator_UserParentTable="Documents" />
      <msdata:Relationship name="FK_RubricsDocuments_Rubrics" msdata:parent="Rubrics" msdata:child="RubricsDocuments" msdata:parentkey="id" msdata:childkey="Rubric_id" msprop:Generator_UserChildTable="RubricsDocuments" msprop:Generator_ChildPropName="GetRubricsDocumentsRows" msprop:Generator_UserRelationName="FK_RubricsDocuments_Rubrics" msprop:Generator_ParentPropName="RubricsRow" msprop:Generator_RelationVarName="relationFK_RubricsDocuments_Rubrics" msprop:Generator_UserParentTable="Rubrics" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>